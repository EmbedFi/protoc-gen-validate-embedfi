---
# builds, pushes
name: Buf Plugin Workflow
on: [push]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          export FULL_DOCKER_TAG=$(basename $GITHUB_REPOSITORY):$GITHUB_SHA
          docker build \
            --build-arg VERSION=$IMAGE_TAG \
            -t $FULL_DOCKER_TAG \
            .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: ReTag
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker tag "$(basename $GITHUB_REPOSITORY):$GITHUB_SHA" "$ECR_REGISTRY/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA"

      - name: Push to Amazon ECR
        id: puish-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push "$ECR_REGISTRY/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA" \
          || docker pull "$ECR_REGISTRY/$(basename $GITHUB_REPOSITORY):$GITHUB_SHA"

      - name: Login
        env: 
          BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
        run: docker login --username=anything --password $BUF_TOKEN plugins.buf.build

      - name: ReTag
        run: |
          export NEW_TAG="plugins.buf.build/embedfi/$(basename $GITHUB_REPOSITORY | sed -e s,protoc-gen-,,g):v0.0.0-$GITHUB_SHA" \
          && docker tag "$(basename $GITHUB_REPOSITORY):$GITHUB_SHA" "$NEW_TAG" \
          && docker push $NEW_TAG




